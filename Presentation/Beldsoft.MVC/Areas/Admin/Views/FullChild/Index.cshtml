@model Beldsoft.MVC.ViewModels.Child.PagedChildViewModel

@{
    ViewData["Title"] = "Çocuklar";
}

<div class="card">
    <div class="card-header">
        <div class="row align-items-center">
            <div class="col">
                <h4 class="card-title">Tüm Çocuklar</h4>
            </div>
  
        </div>
    </div>

    <div class="card-body pt-0">
        <div class="table-responsive">
            <table class="table table-bordered mb-0">
                <thead>
                    <tr>
                        <th>Ad</th>
                        <th>Soyad</th>
                        <th>Telefon</th>
                        <th>Geliş Saati</th>
                        <th>Süre (dk)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var child in Model.Children)
                    {
                        <tr>
                            <td>@child.FirstName</td>
                            <td>@child.LastName</td>
                            <td>@child.ParentPhone</td>
                            <td>@(child.ArrivalTime.HasValue ? child.ArrivalTime.Value.ToString("dd.MM.yyyy HH:mm") : "-")</td>
                            <td>@child.DurationMinutes</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Bootstrap Pagination -->
            <nav aria-label="Page navigation" class="mt-3">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize, search = ViewData["Search"] })">Önceki</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize, search = ViewData["Search"] })">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize, search = ViewData["Search"] })">Sonraki</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
